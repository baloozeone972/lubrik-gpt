# Media Service - Configuration YAML

spring:
  application:
    n: media-service
  
  profiles:
    active: ${ENVIRONMENT:development}
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:virtual_companion_db}?currentSchema=media_service
    username: ${DB_USERNAME:vc_admin}
    password: ${DB_PASSWORD:vc_secure_pass_2024}
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redis_secure_pass_2024}
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:100MB}
      max-request-size: ${MAX_REQUEST_SIZE:100MB}
  
  # Flyway
  flyway:
    enabled: true
    schemas: media_service

server:
  port: ${MEDIA_SERVICE_PORT:8084}

# MinIO Configuration
minio:
  endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:minio_admin}
  secret-key: ${MINIO_SECRET_KEY:minio_secure_pass_2024}
  secure: ${MINIO_SECURE:false}
  buckets:
    images: vc-images
    videos: vc-videos
    audio: vc-audio
    avatars: vc-avatars
    temp: vc-temp

# Media Processing Configuration
media:
  processing:
    # Image Processing
    image:
      max-width: 4096
      max-height: 4096
      thumbnail-sizes:
        - n: small
          width: 150
          height: 150
        - n: medium
          width: 400
          height: 400
        - n: large
          width: 800
          height: 800
      supported-formats:
        - jpg
        - jpeg
        - png
        - webp
        - gif
      compression-quality: 0.85
    
    # Video Processing
    video:
      max-duration-seconds: 600
      max-file-size-mb: 500
      output-formats:
        - mp4
        - webm
      resolutions:
        - n: sd
          width: 640
          height: 360
          bitrate: 800000
        - n: hd
          width: 1280
          height: 720
          bitrate: 2000000
        - n: fhd
          width: 1920
          height: 1080
          bitrate: 4000000
      ffmpeg-path: ${FFMPEG_PATH:/usr/bin/ffmpeg}
    
    # Audio Processing
    audio:
      max-duration-seconds: 300
      output-formats:
        - mp3
        - m4a
        - ogg
      bitrates:
        - 128000
        - 192000
        - 320000
    
    # Concurrent Processing
    thread-pool-size: ${MEDIA_PROCESSING_THREADS:4}
    queue-capacity: 100

# WebRTC/Kurento Configuration
kurento:
  url: ${KURENTO_URL:ws://localhost:8888/kurento}
  connection-timeout: 5000
  request-timeout: 30000
  ice-servers:
    - url: stun:stun.l.google.com:19302
    - url: ${TURN_URL:turn:localhost:3478}
      username: ${TURN_USERNAME:}
      credential: ${TURN_PASSWORD:}

# Voice Generation Configuration
voice:
  providers:
    elevenlabs:
      enabled: ${ELEVENLABS_ENABLED:false}
      api-key: ${ELEVENLABS_API_KEY:}
      api-url: https://api.elevenlabs.io/v1
      default-model: eleven_monolingual_v1

    azure:
      enabled: ${AZURE_TTS_ENABLED:false}
      subscription-key: ${AZURE_TTS_KEY:}
      region: ${AZURE_TTS_REGION:eastus}

    google:
      enabled: ${GOOGLE_TTS_ENABLED:false}
      credentials-path: ${GOOGLE_TTS_CREDENTIALS:}
  
  cache:
    enabled: true
    ttl: 24h
    max-size: 1000

# AI Models for Media Generation
ai:
  models:
    image-generation:
      enabled: ${AI_IMAGE_GEN_ENABLED:false}
      model-path: ${AI_IMAGE_MODEL_PATH:/models/stable-diffusion}

    avatar-generation:
      enabled: ${AI_AVATAR_GEN_ENABLED:false}
      model-path: ${AI_AVATAR_MODEL_PATH:/models/avatar-gen}

    voice-cloning:
      enabled: ${AI_VOICE_CLONE_ENABLED:false}
      model-path: ${AI_VOICE_MODEL_PATH:/models/voice-clone}

# Content Moderation
moderation:
  enabled: true
  providers:
    - aws-rekognition
    - google-vision
    - custom-model
  thresholds:
    nudity: 0.8
    violence: 0.7
    explicit: 0.8

# CDN Configuration
cdn:
  enabled: ${CDN_ENABLED:false}
  base-url: ${CDN_BASE_URL:https://cdn.virtualcompanion.app}
  cache-control: public, max-age=31536000

# Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

# Kafka Topics
kafka:
  topics:
    media-events: media-events
    processing-queue: media-processing-queue
    moderation-results: moderation-results