// =============================================================================
// File: __tests__/performance/RenderPerformance.test.tsx
// Generated by TypeScriptFileParser
// Date: Thu Jun 19 21:11:26 CEST 2025
// =============================================================================

import React from 'react';
import { render } from '@testing-library/react';
import { CharacterGrid } from '@/components/characters/CharacterGrid';
import { measureRender } from '@/test-utils/performance';

describe('Render Performance', () => {
  it('renders large character list efficiently', () => {
    const characters = Array.from({ length: 1000 }, (_, i) => ({
      id: `${i}`,
      name: `Character ${i}`,
      description: 'Description',
      avatarUrl: '/avatar.jpg'
    }));

    const { duration } = measureRender(() => {
      render(<CharacterGrid characters={characters} />);
    });

    // Should render in under 100ms
    expect(duration).toBeLessThan(100);
  });

  it('handles rapid message updates efficiently', async () => {
    const { rerender } = render(<ChatWindow messages={[]} />);
    
    const startTime = performance.now();
    
    // Simulate 100 rapid message updates
    for (let i = 0; i < 100; i++) {
      const messages = Array.from({ length: i + 1 }, (_, j) => ({
        id: `${j}`,
        content: `Message ${j}`,
        role: j % 2 === 0 ? 'user' : 'assistant'
      }));
      
      rerender(<ChatWindow messages={messages} />);
    }
    
    const duration = performance.now() - startTime;
    
    // Should handle 100 updates in under 500ms
    expect(duration).toBeLessThan(500);
  });
});